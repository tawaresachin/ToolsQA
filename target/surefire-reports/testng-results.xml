<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="2" ignored="0" total="38" passed="30">
  <reporter-output>
  </reporter-output>
  <suite name="DemoQATest" duration-ms="101636" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:03:07Z">
    <groups>
    </groups>
    <test name="toolsqaHomeTest" duration-ms="15202" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:01:40Z">
      <class name="com.cybage.assignment.test.toolsqaHomePageTest">
        <test-method status="PASS" signature="testSetUp()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="testSetUp" is-config="true" duration-ms="13802" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetUp -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="waitToLoadElements" is-config="true" duration-ms="15" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateIfAlertTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="validateIfAlertTabPresent" duration-ms="56" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIfAlertTabPresent -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="captureAndReport" is-config="true" duration-ms="33" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIfAlertTabPresent status=SUCCESS method=toolsqaHomePageTest.validateIfAlertTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="waitToLoadElements" is-config="true" duration-ms="17" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateIfBookStoreTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="validateIfBookStoreTabPresent" duration-ms="49" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIfBookStoreTabPresent -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIfBookStoreTabPresent status=SUCCESS method=toolsqaHomePageTest.validateIfBookStoreTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="waitToLoadElements" is-config="true" duration-ms="10" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateIfElementsTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="validateIfElementsTabPresent" duration-ms="67" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIfElementsTabPresent -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="captureAndReport" is-config="true" duration-ms="1" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIfElementsTabPresent status=SUCCESS method=toolsqaHomePageTest.validateIfElementsTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="waitToLoadElements" is-config="true" duration-ms="8" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateIfFormsTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="validateIfFormsTabPresent" duration-ms="38" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIfFormsTabPresent -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIfFormsTabPresent status=SUCCESS method=toolsqaHomePageTest.validateIfFormsTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="waitToLoadElements" is-config="true" duration-ms="5" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateIfInteractionsTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="validateIfInteractionsTabPresent" duration-ms="54" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIfInteractionsTabPresent -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="captureAndReport" is-config="true" duration-ms="1" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIfInteractionsTabPresent status=SUCCESS method=toolsqaHomePageTest.validateIfInteractionsTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="waitToLoadElements" is-config="true" duration-ms="7" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateIfLogoPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="validateIfLogoPresent" duration-ms="35" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIfLogoPresent -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIfLogoPresent status=SUCCESS method=toolsqaHomePageTest.validateIfLogoPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="waitToLoadElements" is-config="true" duration-ms="8" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateIfWidgetTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="validateIfWidgetTabPresent" duration-ms="36" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIfWidgetTabPresent -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="captureAndReport" is-config="true" duration-ms="3" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIfWidgetTabPresent status=SUCCESS method=toolsqaHomePageTest.validateIfWidgetTabPresent()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="waitToLoadElements" is-config="true" duration-ms="7" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validatePageBanner()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="validatePageBanner" duration-ms="36" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePageBanner -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePageBanner status=SUCCESS method=toolsqaHomePageTest.validatePageBanner()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="waitToLoadElements" is-config="true" duration-ms="8" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validatePageTitle()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="validatePageTitle" duration-ms="3" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePageTitle -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="captureAndReport" is-config="true" duration-ms="1" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePageTitle status=SUCCESS method=toolsqaHomePageTest.validatePageTitle()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="testCleanUp()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="testCleanUp" is-config="true" duration-ms="881" started-at="2021-10-01T05:01:39Z" finished-at="2021-10-01T05:01:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanUp -->
        <test-method status="PASS" signature="releaseDriver()[pri:0, instance:com.cybage.assignment.test.toolsqaHomePageTest@10ca069]" name="releaseDriver" is-config="true" duration-ms="0" started-at="2021-10-01T05:01:40Z" finished-at="2021-10-01T05:01:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- releaseDriver -->
      </class> <!-- com.cybage.assignment.test.toolsqaHomePageTest -->
    </test> <!-- toolsqaHomeTest -->
    <test name="toolsqaFormTest" duration-ms="36936" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:02:02Z">
      <class name="com.cybage.assignment.test.toolsqaFormPageTest">
        <test-method status="PASS" signature="testSetUp()[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="testSetUp" is-config="true" duration-ms="15626" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetUp -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="waitToLoadElements" is-config="true" duration-ms="3006" started-at="2021-10-01T05:01:41Z" finished-at="2021-10-01T05:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validatePracticeFormOption()[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="validatePracticeFormOption" duration-ms="2260" started-at="2021-10-01T05:01:44Z" finished-at="2021-10-01T05:01:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePracticeFormOption -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:01:46Z" finished-at="2021-10-01T05:01:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePracticeFormOption status=SUCCESS method=toolsqaFormPageTest.validatePracticeFormOption()[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="waitToLoadElements" is-config="true" duration-ms="3006" started-at="2021-10-01T05:01:46Z" finished-at="2021-10-01T05:01:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateFormFilling()[pri:1, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="validateFormFilling" duration-ms="4815" started-at="2021-10-01T05:01:49Z" depends-on-methods="com.cybage.assignment.test.toolsqaFormPageTest.validatePracticeFormOption" finished-at="2021-10-01T05:01:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFormFilling -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="captureAndReport" is-config="true" duration-ms="3" started-at="2021-10-01T05:01:54Z" finished-at="2021-10-01T05:01:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFormFilling status=SUCCESS method=toolsqaFormPageTest.validateFormFilling()[pri:1, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="waitToLoadElements" is-config="true" duration-ms="3009" started-at="2021-10-01T05:01:54Z" finished-at="2021-10-01T05:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateFormAfterSubmit()[pri:2, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="validateFormAfterSubmit" duration-ms="400" started-at="2021-10-01T05:01:57Z" depends-on-methods="com.cybage.assignment.test.toolsqaFormPageTest.validatePracticeFormOption" finished-at="2021-10-01T05:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFormAfterSubmit -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="captureAndReport" is-config="true" duration-ms="4" started-at="2021-10-01T05:01:57Z" finished-at="2021-10-01T05:01:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFormAfterSubmit status=SUCCESS method=toolsqaFormPageTest.validateFormAfterSubmit()[pri:2, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="testCleanUp()[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="testCleanUp" is-config="true" duration-ms="4797" started-at="2021-10-01T05:01:57Z" finished-at="2021-10-01T05:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanUp -->
        <test-method status="PASS" signature="releaseDriver()[pri:0, instance:com.cybage.assignment.test.toolsqaFormPageTest@78177b]" name="releaseDriver" is-config="true" duration-ms="1" started-at="2021-10-01T05:02:02Z" finished-at="2021-10-01T05:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- releaseDriver -->
      </class> <!-- com.cybage.assignment.test.toolsqaFormPageTest -->
    </test> <!-- toolsqaFormTest -->
    <test name="toolsqaWindowTest" duration-ms="66608" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:02:32Z">
      <class name="com.cybage.assignment.test.alertFrameWindowPageTest">
        <test-method status="PASS" signature="testSetUp()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="testSetUp" is-config="true" duration-ms="13422" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:01:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetUp -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="waitToLoadElements" is-config="true" duration-ms="3013" started-at="2021-10-01T05:01:38Z" finished-at="2021-10-01T05:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validatePresenceOfAlertFrameWindowOptions()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="validatePresenceOfAlertFrameWindowOptions" duration-ms="622" started-at="2021-10-01T05:01:41Z" finished-at="2021-10-01T05:01:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePresenceOfAlertFrameWindowOptions -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="captureAndReport" is-config="true" duration-ms="3" started-at="2021-10-01T05:01:42Z" finished-at="2021-10-01T05:01:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePresenceOfAlertFrameWindowOptions status=SUCCESS method=alertFrameWindowPageTest.validatePresenceOfAlertFrameWindowOptions()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="waitToLoadElements" is-config="true" duration-ms="3007" started-at="2021-10-01T05:01:42Z" finished-at="2021-10-01T05:01:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateAlertsOption()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="validateAlertsOption" duration-ms="19434" started-at="2021-10-01T05:01:45Z" depends-on-methods="com.cybage.assignment.test.alertFrameWindowPageTest.validatePresenceOfAlertFrameWindowOptions" finished-at="2021-10-01T05:02:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAlertsOption -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="captureAndReport" is-config="true" duration-ms="3" started-at="2021-10-01T05:02:04Z" finished-at="2021-10-01T05:02:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAlertsOption status=SUCCESS method=alertFrameWindowPageTest.validateAlertsOption()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="waitToLoadElements" is-config="true" duration-ms="3005" started-at="2021-10-01T05:02:04Z" finished-at="2021-10-01T05:02:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateBrowserWindowOptions()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="validateBrowserWindowOptions" duration-ms="4815" started-at="2021-10-01T05:02:07Z" depends-on-methods="com.cybage.assignment.test.alertFrameWindowPageTest.validatePresenceOfAlertFrameWindowOptions" finished-at="2021-10-01T05:02:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBrowserWindowOptions -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="captureAndReport" is-config="true" duration-ms="3" started-at="2021-10-01T05:02:12Z" finished-at="2021-10-01T05:02:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBrowserWindowOptions status=SUCCESS method=alertFrameWindowPageTest.validateBrowserWindowOptions()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="waitToLoadElements" is-config="true" duration-ms="3010" started-at="2021-10-01T05:02:12Z" finished-at="2021-10-01T05:02:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateIFrameOperations()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="validateIFrameOperations" duration-ms="4434" started-at="2021-10-01T05:02:15Z" depends-on-methods="com.cybage.assignment.test.alertFrameWindowPageTest.validatePresenceOfAlertFrameWindowOptions" finished-at="2021-10-01T05:02:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateIFrameOperations -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="captureAndReport" is-config="true" duration-ms="3" started-at="2021-10-01T05:02:20Z" finished-at="2021-10-01T05:02:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateIFrameOperations status=SUCCESS method=alertFrameWindowPageTest.validateIFrameOperations()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="waitToLoadElements" is-config="true" duration-ms="3002" started-at="2021-10-01T05:02:20Z" finished-at="2021-10-01T05:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateModalDialogsOperation()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="validateModalDialogsOperation" duration-ms="675" started-at="2021-10-01T05:02:23Z" depends-on-methods="com.cybage.assignment.test.alertFrameWindowPageTest.validatePresenceOfAlertFrameWindowOptions" finished-at="2021-10-01T05:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateModalDialogsOperation -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="captureAndReport" is-config="true" duration-ms="3" started-at="2021-10-01T05:02:23Z" finished-at="2021-10-01T05:02:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateModalDialogsOperation status=SUCCESS method=alertFrameWindowPageTest.validateModalDialogsOperation()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="waitToLoadElements" is-config="true" duration-ms="3001" started-at="2021-10-01T05:02:23Z" finished-at="2021-10-01T05:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateNestedFramesOperation()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="validateNestedFramesOperation" duration-ms="382" started-at="2021-10-01T05:02:26Z" depends-on-methods="com.cybage.assignment.test.alertFrameWindowPageTest.validatePresenceOfAlertFrameWindowOptions" finished-at="2021-10-01T05:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateNestedFramesOperation -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:02:27Z" finished-at="2021-10-01T05:02:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateNestedFramesOperation status=SUCCESS method=alertFrameWindowPageTest.validateNestedFramesOperation()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="testCleanUp()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="testCleanUp" is-config="true" duration-ms="4762" started-at="2021-10-01T05:02:27Z" finished-at="2021-10-01T05:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanUp -->
        <test-method status="PASS" signature="releaseDriver()[pri:0, instance:com.cybage.assignment.test.alertFrameWindowPageTest@11cd2d2]" name="releaseDriver" is-config="true" duration-ms="0" started-at="2021-10-01T05:02:32Z" finished-at="2021-10-01T05:02:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- releaseDriver -->
      </class> <!-- com.cybage.assignment.test.alertFrameWindowPageTest -->
    </test> <!-- toolsqaWindowTest -->
    <test name="toolsqaElementTest" duration-ms="97001" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:03:02Z">
      <class name="com.cybage.assignment.test.toolsqaElementPageTest">
        <test-method status="PASS" signature="testSetUp()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="testSetUp" is-config="true" duration-ms="12833" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:01:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetUp -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="waitToLoadElements" is-config="true" duration-ms="3008" started-at="2021-10-01T05:01:38Z" finished-at="2021-10-01T05:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateElementScreen()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="validateElementScreen" duration-ms="645" started-at="2021-10-01T05:01:41Z" finished-at="2021-10-01T05:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateElementScreen -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="captureAndReport" is-config="true" duration-ms="4" started-at="2021-10-01T05:01:41Z" finished-at="2021-10-01T05:01:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateElementScreen status=SUCCESS method=toolsqaElementPageTest.validateElementScreen()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="waitToLoadElements" is-config="true" duration-ms="3007" started-at="2021-10-01T05:01:41Z" finished-at="2021-10-01T05:01:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateBrokenLinkImagesOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="validateBrokenLinkImagesOperations" duration-ms="9302" started-at="2021-10-01T05:01:44Z" depends-on-methods="com.cybage.assignment.test.toolsqaElementPageTest.validateElementScreen" finished-at="2021-10-01T05:01:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateBrokenLinkImagesOperations -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="captureAndReport" is-config="true" duration-ms="4" started-at="2021-10-01T05:01:54Z" finished-at="2021-10-01T05:01:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateBrokenLinkImagesOperations status=SUCCESS method=toolsqaElementPageTest.validateBrokenLinkImagesOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="waitToLoadElements" is-config="true" duration-ms="3011" started-at="2021-10-01T05:01:54Z" finished-at="2021-10-01T05:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateButtonsOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="validateButtonsOperations" duration-ms="687" started-at="2021-10-01T05:01:57Z" depends-on-methods="com.cybage.assignment.test.toolsqaElementPageTest.validateElementScreen" finished-at="2021-10-01T05:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateButtonsOperations -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:01:57Z" finished-at="2021-10-01T05:01:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateButtonsOperations status=SUCCESS method=toolsqaElementPageTest.validateButtonsOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="waitToLoadElements" is-config="true" duration-ms="3015" started-at="2021-10-01T05:01:57Z" finished-at="2021-10-01T05:02:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateCheckBoxOperation()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="validateCheckBoxOperation" duration-ms="456" started-at="2021-10-01T05:02:00Z" depends-on-methods="com.cybage.assignment.test.toolsqaElementPageTest.validateElementScreen" finished-at="2021-10-01T05:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateCheckBoxOperation -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:02:01Z" finished-at="2021-10-01T05:02:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateCheckBoxOperation status=SUCCESS method=toolsqaElementPageTest.validateCheckBoxOperation()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="waitToLoadElements" is-config="true" duration-ms="3005" started-at="2021-10-01T05:02:01Z" finished-at="2021-10-01T05:02:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateDynamicButtonsOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="validateDynamicButtonsOperations" duration-ms="11150" started-at="2021-10-01T05:02:04Z" depends-on-methods="com.cybage.assignment.test.toolsqaElementPageTest.validateElementScreen" finished-at="2021-10-01T05:02:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDynamicButtonsOperations -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="captureAndReport" is-config="true" duration-ms="3" started-at="2021-10-01T05:02:15Z" finished-at="2021-10-01T05:02:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDynamicButtonsOperations status=SUCCESS method=toolsqaElementPageTest.validateDynamicButtonsOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="waitToLoadElements" is-config="true" duration-ms="3006" started-at="2021-10-01T05:02:15Z" finished-at="2021-10-01T05:02:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateLinksOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="validateLinksOperations" duration-ms="2678" started-at="2021-10-01T05:02:18Z" depends-on-methods="com.cybage.assignment.test.toolsqaElementPageTest.validateElementScreen" finished-at="2021-10-01T05:02:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLinksOperations -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:02:21Z" finished-at="2021-10-01T05:02:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLinksOperations status=SUCCESS method=toolsqaElementPageTest.validateLinksOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="waitToLoadElements" is-config="true" duration-ms="3012" started-at="2021-10-01T05:02:21Z" finished-at="2021-10-01T05:02:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateRadioButtonOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="validateRadioButtonOperations" duration-ms="579" started-at="2021-10-01T05:02:24Z" depends-on-methods="com.cybage.assignment.test.toolsqaElementPageTest.validateElementScreen" finished-at="2021-10-01T05:02:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateRadioButtonOperations -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="captureAndReport" is-config="true" duration-ms="3" started-at="2021-10-01T05:02:24Z" finished-at="2021-10-01T05:02:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateRadioButtonOperations status=SUCCESS method=toolsqaElementPageTest.validateRadioButtonOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="waitToLoadElements" is-config="true" duration-ms="3007" started-at="2021-10-01T05:02:24Z" finished-at="2021-10-01T05:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateTextBoxOnSubmission()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="validateTextBoxOnSubmission" duration-ms="892" started-at="2021-10-01T05:02:27Z" depends-on-methods="com.cybage.assignment.test.toolsqaElementPageTest.validateElementScreen" finished-at="2021-10-01T05:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateTextBoxOnSubmission -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:02:28Z" finished-at="2021-10-01T05:02:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateTextBoxOnSubmission status=SUCCESS method=toolsqaElementPageTest.validateTextBoxOnSubmission()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="waitToLoadElements" is-config="true" duration-ms="3014" started-at="2021-10-01T05:02:28Z" finished-at="2021-10-01T05:02:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateUploadDownloadOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="validateUploadDownloadOperations" duration-ms="2301" started-at="2021-10-01T05:02:31Z" depends-on-methods="com.cybage.assignment.test.toolsqaElementPageTest.validateElementScreen" finished-at="2021-10-01T05:02:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUploadDownloadOperations -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="captureAndReport" is-config="true" duration-ms="1" started-at="2021-10-01T05:02:34Z" finished-at="2021-10-01T05:02:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateUploadDownloadOperations status=SUCCESS method=toolsqaElementPageTest.validateUploadDownloadOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="waitToLoadElements" is-config="true" duration-ms="3004" started-at="2021-10-01T05:02:34Z" finished-at="2021-10-01T05:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateWebTablesOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="validateWebTablesOperations" duration-ms="20558" started-at="2021-10-01T05:02:37Z" depends-on-methods="com.cybage.assignment.test.toolsqaElementPageTest.validateElementScreen" finished-at="2021-10-01T05:02:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWebTablesOperations -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:02:57Z" finished-at="2021-10-01T05:02:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWebTablesOperations status=SUCCESS method=toolsqaElementPageTest.validateWebTablesOperations()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="testCleanUp()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="testCleanUp" is-config="true" duration-ms="4790" started-at="2021-10-01T05:02:57Z" finished-at="2021-10-01T05:03:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanUp -->
        <test-method status="PASS" signature="releaseDriver()[pri:0, instance:com.cybage.assignment.test.toolsqaElementPageTest@1f2d024]" name="releaseDriver" is-config="true" duration-ms="0" started-at="2021-10-01T05:03:02Z" finished-at="2021-10-01T05:03:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- releaseDriver -->
      </class> <!-- com.cybage.assignment.test.toolsqaElementPageTest -->
    </test> <!-- toolsqaElementTest -->
    <test name="toolsqaWidgetTest" duration-ms="101636" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:03:07Z">
      <class name="com.cybage.assignment.test.widgetsPageTest">
        <test-method status="PASS" signature="testSetUp()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="testSetUp" is-config="true" duration-ms="12915" started-at="2021-10-01T05:01:25Z" finished-at="2021-10-01T05:01:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetUp -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="waitToLoadElements" is-config="true" duration-ms="3012" started-at="2021-10-01T05:01:38Z" finished-at="2021-10-01T05:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validatePresenceOfWidgetOptions()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="validatePresenceOfWidgetOptions" duration-ms="855" started-at="2021-10-01T05:01:41Z" finished-at="2021-10-01T05:01:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePresenceOfWidgetOptions -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:01:42Z" finished-at="2021-10-01T05:01:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatePresenceOfWidgetOptions status=SUCCESS method=widgetsPageTest.validatePresenceOfWidgetOptions()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="waitToLoadElements" is-config="true" duration-ms="3005" started-at="2021-10-01T05:01:42Z" finished-at="2021-10-01T05:01:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="PASS" signature="validateAccordianPageOperations()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="validateAccordianPageOperations" duration-ms="4785" started-at="2021-10-01T05:01:45Z" depends-on-methods="com.cybage.assignment.test.widgetsPageTest.validatePresenceOfWidgetOptions" finished-at="2021-10-01T05:01:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAccordianPageOperations -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:01:50Z" finished-at="2021-10-01T05:01:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAccordianPageOperations status=SUCCESS method=widgetsPageTest.validateAccordianPageOperations()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="waitToLoadElements" is-config="true" duration-ms="3004" started-at="2021-10-01T05:01:50Z" finished-at="2021-10-01T05:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="SKIP" signature="validateAutoCompleteTextBoxes()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="validateAutoCompleteTextBoxes" duration-ms="3853" started-at="2021-10-01T05:01:53Z" depends-on-methods="com.cybage.assignment.test.widgetsPageTest.validatePresenceOfWidgetOptions" finished-at="2021-10-01T05:01:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Purple] but found [Red],
expected [Red] but found [Green]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Purple] but found [Red],
expected [Red] but found [Green]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.cybage.assignment.test.widgetsPageTest.validateAutoCompleteTextBoxes(widgetsPageTest.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAutoCompleteTextBoxes -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:01:56Z" finished-at="2021-10-01T05:01:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAutoCompleteTextBoxes status=SKIP method=widgetsPageTest.validateAutoCompleteTextBoxes()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="waitToLoadElements" is-config="true" duration-ms="3004" started-at="2021-10-01T05:01:56Z" finished-at="2021-10-01T05:01:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="SKIP" signature="validateAutoCompleteTextBoxes()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="validateAutoCompleteTextBoxes" duration-ms="3750" started-at="2021-10-01T05:01:59Z" depends-on-methods="com.cybage.assignment.test.widgetsPageTest.validatePresenceOfWidgetOptions" finished-at="2021-10-01T05:02:03Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Purple] but found [Red],
expected [Red] but found [Green]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Purple] but found [Red],
expected [Red] but found [Green]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.cybage.assignment.test.widgetsPageTest.validateAutoCompleteTextBoxes(widgetsPageTest.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAutoCompleteTextBoxes -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:02:03Z" finished-at="2021-10-01T05:02:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAutoCompleteTextBoxes status=SKIP method=widgetsPageTest.validateAutoCompleteTextBoxes()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="waitToLoadElements" is-config="true" duration-ms="3001" started-at="2021-10-01T05:02:03Z" finished-at="2021-10-01T05:02:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="SKIP" signature="validateAutoCompleteTextBoxes()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="validateAutoCompleteTextBoxes" duration-ms="3766" started-at="2021-10-01T05:02:06Z" depends-on-methods="com.cybage.assignment.test.widgetsPageTest.validatePresenceOfWidgetOptions" finished-at="2021-10-01T05:02:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Purple] but found [Red],
expected [Red] but found [Green]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Purple] but found [Red],
expected [Red] but found [Green]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.cybage.assignment.test.widgetsPageTest.validateAutoCompleteTextBoxes(widgetsPageTest.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAutoCompleteTextBoxes -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="captureAndReport" is-config="true" duration-ms="4" started-at="2021-10-01T05:02:10Z" finished-at="2021-10-01T05:02:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAutoCompleteTextBoxes status=SKIP method=widgetsPageTest.validateAutoCompleteTextBoxes()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="waitToLoadElements" is-config="true" duration-ms="3011" started-at="2021-10-01T05:02:10Z" finished-at="2021-10-01T05:02:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="FAIL" signature="validateAutoCompleteTextBoxes()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="validateAutoCompleteTextBoxes" duration-ms="3826" started-at="2021-10-01T05:02:13Z" depends-on-methods="com.cybage.assignment.test.widgetsPageTest.validatePresenceOfWidgetOptions" finished-at="2021-10-01T05:02:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Purple] but found [Red],
expected [Red] but found [Green]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Purple] but found [Red],
expected [Red] but found [Green]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.cybage.assignment.test.widgetsPageTest.validateAutoCompleteTextBoxes(widgetsPageTest.java:88)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAutoCompleteTextBoxes -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="captureAndReport" is-config="true" duration-ms="199" started-at="2021-10-01T05:02:17Z" finished-at="2021-10-01T05:02:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAutoCompleteTextBoxes status=FAILURE method=widgetsPageTest.validateAutoCompleteTextBoxes()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="waitToLoadElements" is-config="true" duration-ms="3001" started-at="2021-10-01T05:02:17Z" finished-at="2021-10-01T05:02:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="SKIP" signature="validateDatePickerOperation()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="validateDatePickerOperation" duration-ms="4731" started-at="2021-10-01T05:02:20Z" depends-on-methods="com.cybage.assignment.test.widgetsPageTest.validatePresenceOfWidgetOptions" finished-at="2021-10-01T05:02:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [May 25, 1988 12:15 AM] but found [May 25, 1988 10:32 AM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [May 25, 1988 12:15 AM] but found [May 25, 1988 10:32 AM]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.cybage.assignment.test.widgetsPageTest.validateDatePickerOperation(widgetsPageTest.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDatePickerOperation -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:02:25Z" finished-at="2021-10-01T05:02:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDatePickerOperation status=SKIP method=widgetsPageTest.validateDatePickerOperation()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="waitToLoadElements" is-config="true" duration-ms="3006" started-at="2021-10-01T05:02:25Z" finished-at="2021-10-01T05:02:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="SKIP" signature="validateDatePickerOperation()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="validateDatePickerOperation" duration-ms="22177" started-at="2021-10-01T05:02:28Z" depends-on-methods="com.cybage.assignment.test.widgetsPageTest.validatePresenceOfWidgetOptions" finished-at="2021-10-01T05:02:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [May 25, 1988 12:15 AM] but found [January 25, 1988 10:32 AM]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [May 25, 1988 12:15 AM] but found [January 25, 1988 10:32 AM]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at com.cybage.assignment.test.widgetsPageTest.validateDatePickerOperation(widgetsPageTest.java:98)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDatePickerOperation -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="captureAndReport" is-config="true" duration-ms="2" started-at="2021-10-01T05:02:50Z" finished-at="2021-10-01T05:02:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDatePickerOperation status=SKIP method=widgetsPageTest.validateDatePickerOperation()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="waitToLoadElements" is-config="true" duration-ms="3013" started-at="2021-10-01T05:02:50Z" finished-at="2021-10-01T05:02:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="SKIP" signature="validateDatePickerOperation()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="validateDatePickerOperation" duration-ms="2884" started-at="2021-10-01T05:02:53Z" depends-on-methods="com.cybage.assignment.test.widgetsPageTest.validatePresenceOfWidgetOptions" finished-at="2021-10-01T05:02:56Z">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <div class="react-datepicker__day react-datepicker__day--0..." tabindex="-1" aria-label="Choose Wednesday, May 25th, 1988" role="option" aria-disabled="false">25</div> is not clickable at point (644, 244). Other element would receive the click: <div class="react-datepicker__year-option">...</div>
  (Session info: chrome=93.0.4577.82)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'SACHINTAW-W10', ip: '172.27.85.17', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 93.0.4577.82, chrome: {chromedriverVersion: 93.0.4577.15 (660fc11082ba5..., userDataDir: C:\Users\SACHIN~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50552}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9363b6f16f4270114bd8e9288a0a12a2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <div class="react-datepicker__day react-datepicker__day--0..." tabindex="-1" aria-label="Choose Wednesday, May 25th, 1988" role="option" aria-disabled="false">25</div> is not clickable at point (644, 244). Other element would receive the click: <div class="react-datepicker__year-option">...</div>
  (Session info: chrome=93.0.4577.82)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'SACHINTAW-W10', ip: '172.27.85.17', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 93.0.4577.82, chrome: {chromedriverVersion: 93.0.4577.15 (660fc11082ba5..., userDataDir: C:\Users\SACHIN~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50552}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9363b6f16f4270114bd8e9288a0a12a2
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at com.cybage.assignment.page.widgetsPage.selectDateTimeUsingDatePicker(widgetsPage.java:260)
at com.cybage.assignment.test.widgetsPageTest.validateDatePickerOperation(widgetsPageTest.java:97)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDatePickerOperation -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="captureAndReport" is-config="true" duration-ms="1" started-at="2021-10-01T05:02:56Z" finished-at="2021-10-01T05:02:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDatePickerOperation status=SKIP method=widgetsPageTest.validateDatePickerOperation()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="waitToLoadElements()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="waitToLoadElements" is-config="true" duration-ms="3011" started-at="2021-10-01T05:02:56Z" finished-at="2021-10-01T05:02:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitToLoadElements -->
        <test-method status="FAIL" signature="validateDatePickerOperation()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="validateDatePickerOperation" duration-ms="2887" started-at="2021-10-01T05:02:59Z" depends-on-methods="com.cybage.assignment.test.widgetsPageTest.validatePresenceOfWidgetOptions" finished-at="2021-10-01T05:03:02Z">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <div class="react-datepicker__day react-datepicker__day--0..." tabindex="-1" aria-label="Choose Wednesday, May 25th, 1988" role="option" aria-disabled="false">25</div> is not clickable at point (644, 244). Other element would receive the click: <div class="react-datepicker__year-option">...</div>
  (Session info: chrome=93.0.4577.82)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'SACHINTAW-W10', ip: '172.27.85.17', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 93.0.4577.82, chrome: {chromedriverVersion: 93.0.4577.15 (660fc11082ba5..., userDataDir: C:\Users\SACHIN~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50552}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9363b6f16f4270114bd8e9288a0a12a2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <div class="react-datepicker__day react-datepicker__day--0..." tabindex="-1" aria-label="Choose Wednesday, May 25th, 1988" role="option" aria-disabled="false">25</div> is not clickable at point (644, 244). Other element would receive the click: <div class="react-datepicker__year-option">...</div>
  (Session info: chrome=93.0.4577.82)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'SACHINTAW-W10', ip: '172.27.85.17', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_171'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 93.0.4577.82, chrome: {chromedriverVersion: 93.0.4577.15 (660fc11082ba5..., userDataDir: C:\Users\SACHIN~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50552}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9363b6f16f4270114bd8e9288a0a12a2
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at com.cybage.assignment.page.widgetsPage.selectDateTimeUsingDatePicker(widgetsPage.java:260)
at com.cybage.assignment.test.widgetsPageTest.validateDatePickerOperation(widgetsPageTest.java:97)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.retryFailed(Invoker.java:839)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1010)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateDatePickerOperation -->
        <test-method status="PASS" signature="captureAndReport(org.testng.ITestResult)[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="captureAndReport" is-config="true" duration-ms="141" started-at="2021-10-01T05:03:02Z" finished-at="2021-10-01T05:03:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateDatePickerOperation status=FAILURE method=widgetsPageTest.validateDatePickerOperation()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureAndReport -->
        <test-method status="PASS" signature="testCleanUp()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="testCleanUp" is-config="true" duration-ms="4772" started-at="2021-10-01T05:03:02Z" finished-at="2021-10-01T05:03:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCleanUp -->
        <test-method status="PASS" signature="releaseDriver()[pri:0, instance:com.cybage.assignment.test.widgetsPageTest@56c911]" name="releaseDriver" is-config="true" duration-ms="0" started-at="2021-10-01T05:03:07Z" finished-at="2021-10-01T05:03:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- releaseDriver -->
      </class> <!-- com.cybage.assignment.test.widgetsPageTest -->
    </test> <!-- toolsqaWidgetTest -->
  </suite> <!-- DemoQATest -->
</testng-results>
